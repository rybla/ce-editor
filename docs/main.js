/* Generated by Spago v0.93.43 */
(() => {
  // output/Data.Show/foreign.js
  var showIntImpl = function(n) {
    return n.toString();
  };
  var showStringImpl = function(s) {
    var l = s.length;
    return '"' + s.replace(
      /[\0-\x1F\x7F"\\]/g,
      // eslint-disable-line no-control-regex
      function(c, i) {
        switch (c) {
          case '"':
          case "\\":
            return "\\" + c;
          case "\x07":
            return "\\a";
          case "\b":
            return "\\b";
          case "\f":
            return "\\f";
          case "\n":
            return "\\n";
          case "\r":
            return "\\r";
          case "	":
            return "\\t";
          case "\v":
            return "\\v";
        }
        var k = i + 1;
        var empty4 = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty4;
      }
    ) + '"';
  };

  // output/Data.Show/index.js
  var showString = {
    show: showStringImpl
  };
  var showInt = {
    show: showIntImpl
  };
  var show = function(dict) {
    return dict.show;
  };

  // output/Control.Semigroupoid/index.js
  var semigroupoidFn = {
    compose: function(f) {
      return function(g) {
        return function(x) {
          return f(g(x));
        };
      };
    }
  };

  // output/Control.Category/index.js
  var identity = function(dict) {
    return dict.identity;
  };
  var categoryFn = {
    identity: function(x) {
      return x;
    },
    Semigroupoid0: function() {
      return semigroupoidFn;
    }
  };

  // output/Effect/foreign.js
  var pureE = function(a) {
    return function() {
      return a;
    };
  };
  var bindE = function(a) {
    return function(f) {
      return function() {
        return f(a())();
      };
    };
  };

  // output/Data.Function/index.js
  var flip = function(f) {
    return function(b) {
      return function(a) {
        return f(a)(b);
      };
    };
  };
  var $$const = function(a) {
    return function(v) {
      return a;
    };
  };

  // output/Data.Functor/foreign.js
  var arrayMap = function(f) {
    return function(arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };

  // output/Data.Unit/foreign.js
  var unit = void 0;

  // output/Data.Functor/index.js
  var map = function(dict) {
    return dict.map;
  };
  var mapFlipped = function(dictFunctor) {
    var map13 = map(dictFunctor);
    return function(fa) {
      return function(f) {
        return map13(f)(fa);
      };
    };
  };
  var $$void = function(dictFunctor) {
    return map(dictFunctor)($$const(unit));
  };
  var functorArray = {
    map: arrayMap
  };

  // output/Control.Apply/index.js
  var apply = function(dict) {
    return dict.apply;
  };

  // output/Control.Applicative/index.js
  var pure = function(dict) {
    return dict.pure;
  };
  var liftA1 = function(dictApplicative) {
    var apply2 = apply(dictApplicative.Apply0());
    var pure13 = pure(dictApplicative);
    return function(f) {
      return function(a) {
        return apply2(pure13(f))(a);
      };
    };
  };

  // output/Control.Bind/foreign.js
  var arrayBind = typeof Array.prototype.flatMap === "function" ? function(arr) {
    return function(f) {
      return arr.flatMap(f);
    };
  } : function(arr) {
    return function(f) {
      var result = [];
      var l = arr.length;
      for (var i = 0; i < l; i++) {
        var xs = f(arr[i]);
        var k = xs.length;
        for (var j = 0; j < k; j++) {
          result.push(xs[j]);
        }
      }
      return result;
    };
  };

  // output/Control.Bind/index.js
  var bind = function(dict) {
    return dict.bind;
  };

  // output/Control.Monad/index.js
  var ap = function(dictMonad) {
    var bind2 = bind(dictMonad.Bind1());
    var pure3 = pure(dictMonad.Applicative0());
    return function(f) {
      return function(a) {
        return bind2(f)(function(f$prime) {
          return bind2(a)(function(a$prime) {
            return pure3(f$prime(a$prime));
          });
        });
      };
    };
  };

  // output/Data.Semigroup/foreign.js
  var concatString = function(s1) {
    return function(s2) {
      return s1 + s2;
    };
  };
  var concatArray = function(xs) {
    return function(ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };

  // output/Data.Semigroup/index.js
  var semigroupString = {
    append: concatString
  };
  var semigroupArray = {
    append: concatArray
  };
  var append = function(dict) {
    return dict.append;
  };

  // output/Data.Monoid/index.js
  var monoidString = {
    mempty: "",
    Semigroup0: function() {
      return semigroupString;
    }
  };
  var mempty = function(dict) {
    return dict.mempty;
  };

  // output/Effect/index.js
  var $runtime_lazy = function(name15, moduleName, init2) {
    var state2 = 0;
    var val;
    return function(lineNumber) {
      if (state2 === 2) return val;
      if (state2 === 1) throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state2 = 1;
      val = init2();
      state2 = 2;
      return val;
    };
  };
  var monadEffect = {
    Applicative0: function() {
      return applicativeEffect;
    },
    Bind1: function() {
      return bindEffect;
    }
  };
  var bindEffect = {
    bind: bindE,
    Apply0: function() {
      return $lazy_applyEffect(0);
    }
  };
  var applicativeEffect = {
    pure: pureE,
    Apply0: function() {
      return $lazy_applyEffect(0);
    }
  };
  var $lazy_functorEffect = /* @__PURE__ */ $runtime_lazy("functorEffect", "Effect", function() {
    return {
      map: liftA1(applicativeEffect)
    };
  });
  var $lazy_applyEffect = /* @__PURE__ */ $runtime_lazy("applyEffect", "Effect", function() {
    return {
      apply: ap(monadEffect),
      Functor0: function() {
        return $lazy_functorEffect(0);
      }
    };
  });
  var functorEffect = /* @__PURE__ */ $lazy_functorEffect(20);

  // output/Effect.Class/index.js
  var monadEffectEffect = {
    liftEffect: /* @__PURE__ */ identity(categoryFn),
    Monad0: function() {
      return monadEffect;
    }
  };
  var liftEffect = function(dict) {
    return dict.liftEffect;
  };

  // output/Effect.Exception/foreign.js
  function error(msg) {
    return new Error(msg);
  }
  function throwException(e) {
    return function() {
      throw e;
    };
  }

  // output/Data.Bounded/foreign.js
  var topChar = String.fromCharCode(65535);
  var bottomChar = String.fromCharCode(0);
  var topNumber = Number.POSITIVE_INFINITY;
  var bottomNumber = Number.NEGATIVE_INFINITY;

  // output/Data.Maybe/index.js
  var identity2 = /* @__PURE__ */ identity(categoryFn);
  var Nothing = /* @__PURE__ */ function() {
    function Nothing2() {
    }
    ;
    Nothing2.value = new Nothing2();
    return Nothing2;
  }();
  var Just = /* @__PURE__ */ function() {
    function Just2(value0) {
      this.value0 = value0;
    }
    ;
    Just2.create = function(value0) {
      return new Just2(value0);
    };
    return Just2;
  }();
  var maybe$prime = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2 instanceof Nothing) {
          return v(unit);
        }
        ;
        if (v2 instanceof Just) {
          return v1(v2.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 250, column 1 - line 250, column 62): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
  var functorMaybe = {
    map: function(v) {
      return function(v1) {
        if (v1 instanceof Just) {
          return new Just(v(v1.value0));
        }
        ;
        return Nothing.value;
      };
    }
  };
  var map2 = /* @__PURE__ */ map(functorMaybe);
  var fromMaybe$prime = function(a) {
    return maybe$prime(a)(identity2);
  };
  var applyMaybe = {
    apply: function(v) {
      return function(v1) {
        if (v instanceof Just) {
          return map2(v.value0)(v1);
        }
        ;
        if (v instanceof Nothing) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorMaybe;
    }
  };
  var bindMaybe = {
    bind: function(v) {
      return function(v1) {
        if (v instanceof Just) {
          return v1(v.value0);
        }
        ;
        if (v instanceof Nothing) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Apply0: function() {
      return applyMaybe;
    }
  };
  var applicativeMaybe = /* @__PURE__ */ function() {
    return {
      pure: Just.create,
      Apply0: function() {
        return applyMaybe;
      }
    };
  }();

  // output/Effect.Exception/index.js
  var $$throw = function($4) {
    return throwException(error($4));
  };

  // output/Data.Array/foreign.js
  var rangeImpl = function(start2, end) {
    var step2 = start2 > end ? -1 : 1;
    var result = new Array(step2 * (end - start2) + 1);
    var i = start2, n = 0;
    while (i !== end) {
      result[n++] = i;
      i += step2;
    }
    result[n] = i;
    return result;
  };
  var replicateFill = function(count, value12) {
    if (count < 1) {
      return [];
    }
    var result = new Array(count);
    return result.fill(value12);
  };
  var replicatePolyfill = function(count, value12) {
    var result = [];
    var n = 0;
    for (var i = 0; i < count; i++) {
      result[n++] = value12;
    }
    return result;
  };
  var replicateImpl = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;
  var length = function(xs) {
    return xs.length;
  };
  var unconsImpl = function(empty4, next2, xs) {
    return xs.length === 0 ? empty4({}) : next2(xs[0])(xs.slice(1));
  };
  var indexImpl = function(just, nothing, xs, i) {
    return i < 0 || i >= xs.length ? nothing : just(xs[i]);
  };
  var sliceImpl = function(s, e, l) {
    return l.slice(s, e);
  };

  // output/Effect.Ref/foreign.js
  var _new = function(val) {
    return function() {
      return { value: val };
    };
  };
  var read = function(ref) {
    return function() {
      return ref.value;
    };
  };
  var write = function(val) {
    return function(ref) {
      return function() {
        ref.value = val;
      };
    };
  };

  // output/Effect.Ref/index.js
  var $$new = _new;

  // output/Control.Monad.ST.Internal/foreign.js
  var map_ = function(f) {
    return function(a) {
      return function() {
        return f(a());
      };
    };
  };
  function newSTRef(val) {
    return function() {
      return { value: val };
    };
  }
  var read2 = function(ref) {
    return function() {
      return ref.value;
    };
  };
  var modifyImpl2 = function(f) {
    return function(ref) {
      return function() {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };
  var write2 = function(a) {
    return function(ref) {
      return function() {
        return ref.value = a;
      };
    };
  };

  // output/Control.Monad.ST.Internal/index.js
  var modify$prime = modifyImpl2;
  var modify = function(f) {
    return modify$prime(function(s) {
      var s$prime = f(s);
      return {
        state: s$prime,
        value: s$prime
      };
    });
  };
  var functorST = {
    map: map_
  };

  // output/Data.Array.ST/foreign.js
  function newSTArray() {
    return [];
  }
  function unsafeFreezeThawImpl(xs) {
    return xs;
  }
  var unsafeFreezeImpl = unsafeFreezeThawImpl;
  function copyImpl(xs) {
    return xs.slice();
  }
  var thawImpl = copyImpl;
  var pushImpl = function(a, xs) {
    return xs.push(a);
  };

  // output/Control.Monad.ST.Uncurried/foreign.js
  var runSTFn1 = function runSTFn12(fn) {
    return function(a) {
      return function() {
        return fn(a);
      };
    };
  };
  var runSTFn2 = function runSTFn22(fn) {
    return function(a) {
      return function(b) {
        return function() {
          return fn(a, b);
        };
      };
    };
  };

  // output/Data.Array.ST/index.js
  var unsafeFreeze = /* @__PURE__ */ runSTFn1(unsafeFreezeImpl);
  var thaw = /* @__PURE__ */ runSTFn1(thawImpl);
  var withArray = function(f) {
    return function(xs) {
      return function __do2() {
        var result = thaw(xs)();
        f(result)();
        return unsafeFreeze(result)();
      };
    };
  };
  var push = /* @__PURE__ */ runSTFn2(pushImpl);

  // output/Data.HeytingAlgebra/foreign.js
  var boolConj = function(b1) {
    return function(b2) {
      return b1 && b2;
    };
  };
  var boolDisj = function(b1) {
    return function(b2) {
      return b1 || b2;
    };
  };
  var boolNot = function(b) {
    return !b;
  };

  // output/Data.HeytingAlgebra/index.js
  var not = function(dict) {
    return dict.not;
  };
  var disj = function(dict) {
    return dict.disj;
  };
  var heytingAlgebraBoolean = {
    ff: false,
    tt: true,
    implies: function(a) {
      return function(b) {
        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
    },
    conj: boolConj,
    disj: boolDisj,
    not: boolNot
  };

  // output/Data.Array.ST.Iterator/index.js
  var map3 = /* @__PURE__ */ map(functorST);
  var not2 = /* @__PURE__ */ not(heytingAlgebraBoolean);
  var $$void2 = /* @__PURE__ */ $$void(functorST);
  var Iterator = /* @__PURE__ */ function() {
    function Iterator2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Iterator2.create = function(value0) {
      return function(value1) {
        return new Iterator2(value0, value1);
      };
    };
    return Iterator2;
  }();
  var next = function(v) {
    return function __do2() {
      var i = read2(v.value1)();
      modify(function(v1) {
        return v1 + 1 | 0;
      })(v.value1)();
      return v.value0(i);
    };
  };
  var iterator = function(f) {
    return map3(Iterator.create(f))(newSTRef(0));
  };
  var iterate = function(iter) {
    return function(f) {
      return function __do2() {
        var $$break = newSTRef(false)();
        while (map3(not2)(read2($$break))()) {
          (function __do3() {
            var mx = next(iter)();
            if (mx instanceof Just) {
              return f(mx.value0)();
            }
            ;
            if (mx instanceof Nothing) {
              return $$void2(write2(true)($$break))();
            }
            ;
            throw new Error("Failed pattern match at Data.Array.ST.Iterator (line 42, column 5 - line 44, column 47): " + [mx.constructor.name]);
          })();
        }
        ;
        return {};
      };
    };
  };

  // output/Data.Foldable/foreign.js
  var foldrArray = function(f) {
    return function(init2) {
      return function(xs) {
        var acc = init2;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };
  var foldlArray = function(f) {
    return function(init2) {
      return function(xs) {
        var acc = init2;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };

  // output/Data.Tuple/index.js
  var Tuple = /* @__PURE__ */ function() {
    function Tuple2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Tuple2.create = function(value0) {
      return function(value1) {
        return new Tuple2(value0, value1);
      };
    };
    return Tuple2;
  }();
  var fst = function(v) {
    return v.value0;
  };

  // output/Unsafe.Coerce/foreign.js
  var unsafeCoerce2 = function(x) {
    return x;
  };

  // output/Safe.Coerce/index.js
  var coerce = function() {
    return unsafeCoerce2;
  };

  // output/Data.Newtype/index.js
  var coerce2 = /* @__PURE__ */ coerce();
  var unwrap = function() {
    return coerce2;
  };
  var over = function() {
    return function() {
      return function(v) {
        return coerce2;
      };
    };
  };

  // output/Data.Foldable/index.js
  var foldr = function(dict) {
    return dict.foldr;
  };
  var foldl = function(dict) {
    return dict.foldl;
  };
  var intercalate = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(dictMonoid) {
      var append3 = append(dictMonoid.Semigroup0());
      var mempty2 = mempty(dictMonoid);
      return function(sep) {
        return function(xs) {
          var go2 = function(v) {
            return function(v1) {
              if (v.init) {
                return {
                  init: false,
                  acc: v1
                };
              }
              ;
              return {
                init: false,
                acc: append3(v.acc)(append3(sep)(v1))
              };
            };
          };
          return foldl2(go2)({
            init: true,
            acc: mempty2
          })(xs).acc;
        };
      };
    };
  };
  var foldMapDefaultR = function(dictFoldable) {
    var foldr22 = foldr(dictFoldable);
    return function(dictMonoid) {
      var append3 = append(dictMonoid.Semigroup0());
      var mempty2 = mempty(dictMonoid);
      return function(f) {
        return foldr22(function(x) {
          return function(acc) {
            return append3(f(x))(acc);
          };
        })(mempty2);
      };
    };
  };
  var foldableArray = {
    foldr: foldrArray,
    foldl: foldlArray,
    foldMap: function(dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
    }
  };
  var foldMap = function(dict) {
    return dict.foldMap;
  };

  // output/Data.Function.Uncurried/foreign.js
  var runFn2 = function(fn) {
    return function(a) {
      return function(b) {
        return fn(a, b);
      };
    };
  };
  var runFn3 = function(fn) {
    return function(a) {
      return function(b) {
        return function(c) {
          return fn(a, b, c);
        };
      };
    };
  };
  var runFn4 = function(fn) {
    return function(a) {
      return function(b) {
        return function(c) {
          return function(d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };

  // output/Data.FunctorWithIndex/foreign.js
  var mapWithIndexArray = function(f) {
    return function(xs) {
      var l = xs.length;
      var result = Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(i)(xs[i]);
      }
      return result;
    };
  };

  // output/Data.FunctorWithIndex/index.js
  var mapWithIndex = function(dict) {
    return dict.mapWithIndex;
  };
  var functorWithIndexArray = {
    mapWithIndex: mapWithIndexArray,
    Functor0: function() {
      return functorArray;
    }
  };

  // output/Data.Traversable/foreign.js
  var traverseArrayImpl = /* @__PURE__ */ function() {
    function array1(a) {
      return [a];
    }
    function array2(a) {
      return function(b) {
        return [a, b];
      };
    }
    function array3(a) {
      return function(b) {
        return function(c) {
          return [a, b, c];
        };
      };
    }
    function concat2(xs) {
      return function(ys) {
        return xs.concat(ys);
      };
    }
    return function(apply2) {
      return function(map7) {
        return function(pure3) {
          return function(f) {
            return function(array) {
              function go2(bot, top2) {
                switch (top2 - bot) {
                  case 0:
                    return pure3([]);
                  case 1:
                    return map7(array1)(f(array[bot]));
                  case 2:
                    return apply2(map7(array2)(f(array[bot])))(f(array[bot + 1]));
                  case 3:
                    return apply2(apply2(map7(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                  default:
                    var pivot = bot + Math.floor((top2 - bot) / 4) * 2;
                    return apply2(map7(concat2)(go2(bot, pivot)))(go2(pivot, top2));
                }
              }
              return go2(0, array.length);
            };
          };
        };
      };
    };
  }();

  // output/Data.Traversable/index.js
  var identity3 = /* @__PURE__ */ identity(categoryFn);
  var traverse = function(dict) {
    return dict.traverse;
  };
  var sequenceDefault = function(dictTraversable) {
    var traverse22 = traverse(dictTraversable);
    return function(dictApplicative) {
      return traverse22(dictApplicative)(identity3);
    };
  };
  var traversableArray = {
    traverse: function(dictApplicative) {
      var Apply0 = dictApplicative.Apply0();
      return traverseArrayImpl(apply(Apply0))(map(Apply0.Functor0()))(pure(dictApplicative));
    },
    sequence: function(dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
    },
    Functor0: function() {
      return functorArray;
    },
    Foldable1: function() {
      return foldableArray;
    }
  };
  var sequence = function(dict) {
    return dict.sequence;
  };

  // output/Data.Array/index.js
  var $$void3 = /* @__PURE__ */ $$void(functorST);
  var intercalate1 = /* @__PURE__ */ intercalate(foldableArray);
  var uncons = /* @__PURE__ */ function() {
    return runFn3(unconsImpl)($$const(Nothing.value))(function(x) {
      return function(xs) {
        return new Just({
          head: x,
          tail: xs
        });
      };
    });
  }();
  var snoc = function(xs) {
    return function(x) {
      return withArray(push(x))(xs)();
    };
  };
  var slice = /* @__PURE__ */ runFn3(sliceImpl);
  var take = function(n) {
    return function(xs) {
      var $152 = n < 1;
      if ($152) {
        return [];
      }
      ;
      return slice(0)(n)(xs);
    };
  };
  var range2 = /* @__PURE__ */ runFn2(rangeImpl);
  var $$null = function(xs) {
    return length(xs) === 0;
  };
  var intercalate2 = function(dictMonoid) {
    return intercalate1(dictMonoid);
  };
  var index = /* @__PURE__ */ function() {
    return runFn4(indexImpl)(Just.create)(Nothing.value);
  }();
  var unzip = function(xs) {
    return function __do2() {
      var fsts = newSTArray();
      var snds = newSTArray();
      var iter = iterator(function(v) {
        return index(xs)(v);
      })();
      iterate(iter)(function(v) {
        return function __do3() {
          $$void3(push(v.value0)(fsts))();
          return $$void3(push(v.value1)(snds))();
        };
      })();
      var fsts$prime = unsafeFreeze(fsts)();
      var snds$prime = unsafeFreeze(snds)();
      return new Tuple(fsts$prime, snds$prime);
    }();
  };
  var drop = function(n) {
    return function(xs) {
      var $173 = n < 1;
      if ($173) {
        return xs;
      }
      ;
      return slice(n)(length(xs))(xs);
    };
  };

  // output/Data.NonEmpty/index.js
  var NonEmpty = /* @__PURE__ */ function() {
    function NonEmpty2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    NonEmpty2.create = function(value0) {
      return function(value1) {
        return new NonEmpty2(value0, value1);
      };
    };
    return NonEmpty2;
  }();
  var semigroupNonEmpty = function(dictApplicative) {
    var pure3 = pure(dictApplicative);
    return function(dictSemigroup) {
      var append13 = append(dictSemigroup);
      return {
        append: function(v) {
          return function(v1) {
            return new NonEmpty(v.value0, append13(v.value1)(append13(pure3(v1.value0))(v1.value1)));
          };
        }
      };
    };
  };
  var foldableNonEmpty = function(dictFoldable) {
    var foldMap2 = foldMap(dictFoldable);
    var foldl2 = foldl(dictFoldable);
    var foldr4 = foldr(dictFoldable);
    return {
      foldMap: function(dictMonoid) {
        var append13 = append(dictMonoid.Semigroup0());
        var foldMap12 = foldMap2(dictMonoid);
        return function(f) {
          return function(v) {
            return append13(f(v.value0))(foldMap12(f)(v.value1));
          };
        };
      },
      foldl: function(f) {
        return function(b) {
          return function(v) {
            return foldl2(f)(f(b)(v.value0))(v.value1);
          };
        };
      },
      foldr: function(f) {
        return function(b) {
          return function(v) {
            return f(v.value0)(foldr4(f)(b)(v.value1));
          };
        };
      }
    };
  };

  // output/Data.List.Types/index.js
  var Nil = /* @__PURE__ */ function() {
    function Nil2() {
    }
    ;
    Nil2.value = new Nil2();
    return Nil2;
  }();
  var Cons = /* @__PURE__ */ function() {
    function Cons2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Cons2.create = function(value0) {
      return function(value1) {
        return new Cons2(value0, value1);
      };
    };
    return Cons2;
  }();
  var listMap = function(f) {
    var chunkedRevMap = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
          if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Cons)) {
            $tco_var_v = new Cons(v1, v);
            $copy_v1 = v1.value1.value1.value1;
            return;
          }
          ;
          var unrolledMap = function(v2) {
            if (v2 instanceof Cons && (v2.value1 instanceof Cons && v2.value1.value1 instanceof Nil)) {
              return new Cons(f(v2.value0), new Cons(f(v2.value1.value0), Nil.value));
            }
            ;
            if (v2 instanceof Cons && v2.value1 instanceof Nil) {
              return new Cons(f(v2.value0), Nil.value);
            }
            ;
            return Nil.value;
          };
          var reverseUnrolledMap = function($copy_v2) {
            return function($copy_v3) {
              var $tco_var_v2 = $copy_v2;
              var $tco_done1 = false;
              var $tco_result2;
              function $tco_loop2(v2, v3) {
                if (v2 instanceof Cons && (v2.value0 instanceof Cons && (v2.value0.value1 instanceof Cons && v2.value0.value1.value1 instanceof Cons))) {
                  $tco_var_v2 = v2.value1;
                  $copy_v3 = new Cons(f(v2.value0.value0), new Cons(f(v2.value0.value1.value0), new Cons(f(v2.value0.value1.value1.value0), v3)));
                  return;
                }
                ;
                $tco_done1 = true;
                return v3;
              }
              ;
              while (!$tco_done1) {
                $tco_result2 = $tco_loop2($tco_var_v2, $copy_v3);
              }
              ;
              return $tco_result2;
            };
          };
          $tco_done = true;
          return reverseUnrolledMap(v)(unrolledMap(v1));
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return chunkedRevMap(Nil.value);
  };
  var functorList = {
    map: listMap
  };
  var map4 = /* @__PURE__ */ map(functorList);
  var foldableList = {
    foldr: function(f) {
      return function(b) {
        var rev3 = function() {
          var go2 = function($copy_v) {
            return function($copy_v1) {
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, v1) {
                if (v1 instanceof Nil) {
                  $tco_done = true;
                  return v;
                }
                ;
                if (v1 instanceof Cons) {
                  $tco_var_v = new Cons(v1.value0, v);
                  $copy_v1 = v1.value1;
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.List.Types (line 107, column 7 - line 107, column 23): " + [v.constructor.name, v1.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
              }
              ;
              return $tco_result;
            };
          };
          return go2(Nil.value);
        }();
        var $284 = foldl(foldableList)(flip(f))(b);
        return function($285) {
          return $284(rev3($285));
        };
      };
    },
    foldl: function(f) {
      var go2 = function($copy_b) {
        return function($copy_v) {
          var $tco_var_b = $copy_b;
          var $tco_done1 = false;
          var $tco_result;
          function $tco_loop(b, v) {
            if (v instanceof Nil) {
              $tco_done1 = true;
              return b;
            }
            ;
            if (v instanceof Cons) {
              $tco_var_b = f(b)(v.value0);
              $copy_v = v.value1;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.List.Types (line 111, column 12 - line 113, column 30): " + [v.constructor.name]);
          }
          ;
          while (!$tco_done1) {
            $tco_result = $tco_loop($tco_var_b, $copy_v);
          }
          ;
          return $tco_result;
        };
      };
      return go2;
    },
    foldMap: function(dictMonoid) {
      var append22 = append(dictMonoid.Semigroup0());
      var mempty2 = mempty(dictMonoid);
      return function(f) {
        return foldl(foldableList)(function(acc) {
          var $286 = append22(acc);
          return function($287) {
            return $286(f($287));
          };
        })(mempty2);
      };
    }
  };
  var foldr2 = /* @__PURE__ */ foldr(foldableList);
  var intercalate3 = /* @__PURE__ */ intercalate(foldableList)(monoidString);
  var semigroupList = {
    append: function(xs) {
      return function(ys) {
        return foldr2(Cons.create)(ys)(xs);
      };
    }
  };
  var append1 = /* @__PURE__ */ append(semigroupList);
  var showList = function(dictShow) {
    var show6 = show(dictShow);
    return {
      show: function(v) {
        if (v instanceof Nil) {
          return "Nil";
        }
        ;
        return "(" + (intercalate3(" : ")(map4(show6)(v)) + " : Nil)");
      }
    };
  };
  var applyList = {
    apply: function(v) {
      return function(v1) {
        if (v instanceof Nil) {
          return Nil.value;
        }
        ;
        if (v instanceof Cons) {
          return append1(map4(v.value0)(v1))(apply(applyList)(v.value1)(v1));
        }
        ;
        throw new Error("Failed pattern match at Data.List.Types (line 157, column 1 - line 159, column 48): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorList;
    }
  };
  var applicativeList = {
    pure: function(a) {
      return new Cons(a, Nil.value);
    },
    Apply0: function() {
      return applyList;
    }
  };

  // output/Data.List/index.js
  var foldr3 = /* @__PURE__ */ foldr(foldableList);
  var snoc2 = function(xs) {
    return function(x) {
      return foldr3(Cons.create)(new Cons(x, Nil.value))(xs);
    };
  };
  var reverse2 = /* @__PURE__ */ function() {
    var go2 = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
          if (v1 instanceof Nil) {
            $tco_done = true;
            return v;
          }
          ;
          if (v1 instanceof Cons) {
            $tco_var_v = new Cons(v1.value0, v);
            $copy_v1 = v1.value1;
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [v.constructor.name, v1.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return go2(Nil.value);
  }();
  var fromFoldable = function(dictFoldable) {
    return foldr(dictFoldable)(Cons.create)(Nil.value);
  };

  // output/Foreign.Object/foreign.js
  function toArrayWithKey(f) {
    return function(m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }
  var keys = Object.keys || toArrayWithKey(function(k) {
    return function() {
      return k;
    };
  });

  // output/Partial.Unsafe/foreign.js
  var _unsafePartial = function(f) {
    return f();
  };

  // output/Partial/foreign.js
  var _crashWith = function(msg) {
    throw new Error(msg);
  };

  // output/Partial/index.js
  var crashWith = function() {
    return _crashWith;
  };

  // output/Partial.Unsafe/index.js
  var crashWith2 = /* @__PURE__ */ crashWith();
  var unsafePartial = _unsafePartial;
  var unsafeCrashWith = function(msg) {
    return unsafePartial(function() {
      return crashWith2(msg);
    });
  };

  // output/Utility/index.js
  var bind1 = /* @__PURE__ */ bind(bindMaybe);
  var pure1 = /* @__PURE__ */ pure(applicativeMaybe);
  var writeFlipped = /* @__PURE__ */ flip(write);
  var splitAt_Array = function(v) {
    return function(v1) {
      if (0 <= v && v < length(v1)) {
        return new Just({
          before: take(v)(v1),
          after: drop(v)(v1)
        });
      }
      ;
      return Nothing.value;
    };
  };
  var parens = function(s) {
    return "(" + (s + ")");
  };
  var fromMaybeM = function(dictApplicative) {
    var pure22 = pure(dictApplicative);
    return function(v) {
      return function(v1) {
        if (v1 instanceof Nothing) {
          return v;
        }
        ;
        if (v1 instanceof Just) {
          return pure22(v1.value0);
        }
        ;
        throw new Error("Failed pattern match at Utility (line 109, column 1 - line 109, column 56): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };
  var extractAt_Array = function(i) {
    return function(xs) {
      return bind1(splitAt_Array(i)(xs))(function(v) {
        return bind1(uncons(v.after))(function(v1) {
          return pure1({
            before: v.before,
            at: v1.head,
            after: v1.tail
          });
        });
      });
    };
  };
  var bug = function(msg) {
    return unsafeCrashWith("[[BUG]]\n" + msg);
  };
  var impossible = function(msg) {
    return function(v) {
      return bug("impossible: " + msg);
    };
  };

  // output/Data.Expr/index.js
  var show2 = /* @__PURE__ */ show(showInt);
  var intercalate6 = /* @__PURE__ */ intercalate2(monoidString);
  var append12 = /* @__PURE__ */ append(semigroupArray);
  var map5 = /* @__PURE__ */ map(functorArray);
  var map1 = /* @__PURE__ */ map(functorList);
  var unwrap2 = /* @__PURE__ */ unwrap();
  var intercalate12 = /* @__PURE__ */ intercalate(foldableList)(monoidString);
  var append2 = /* @__PURE__ */ append(/* @__PURE__ */ semigroupNonEmpty(applicativeList)(semigroupList));
  var mapWithIndex3 = /* @__PURE__ */ mapWithIndex(functorWithIndexArray);
  var Point_Handle = /* @__PURE__ */ function() {
    function Point_Handle2(value0) {
      this.value0 = value0;
    }
    ;
    Point_Handle2.create = function(value0) {
      return new Point_Handle2(value0);
    };
    return Point_Handle2;
  }();
  var SpanH_Handle = /* @__PURE__ */ function() {
    function SpanH_Handle2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    SpanH_Handle2.create = function(value0) {
      return function(value1) {
        return new SpanH_Handle2(value0, value1);
      };
    };
    return SpanH_Handle2;
  }();
  var ZipperH_Handle = /* @__PURE__ */ function() {
    function ZipperH_Handle2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ZipperH_Handle2.create = function(value0) {
      return function(value1) {
        return new ZipperH_Handle2(value0, value1);
      };
    };
    return ZipperH_Handle2;
  }();
  var showStep = {
    show: function(v) {
      return "|" + show2(v);
    }
  };
  var show22 = /* @__PURE__ */ show(showStep);
  var showIndex = {
    show: function(v) {
      return "." + show2(v);
    }
  };
  var show4 = /* @__PURE__ */ show(showIndex);
  var showExpr = function(dictShow) {
    var show8 = show(dictShow);
    return {
      show: function(v) {
        if ($$null(v.kids)) {
          return show8(v.l);
        }
        ;
        return parens(intercalate6(" ")(append12([show8(v.l), "%"])(map5(show(showExpr(dictShow)))(v.kids))));
      }
    };
  };
  var show_Path = function(steps) {
    return "[" + (intercalate12(" ")(map1(show22)(steps)) + "]");
  };
  var showPoint = {
    show: function(v) {
      return parens(show_Path(v.path) + (" \u25B3 " + show4(v.j)));
    }
  };
  var mkExpr = function(l) {
    return function(kids) {
      return {
        l,
        kids
      };
    };
  };
  var getTotalInnerPath_ZipperH = function(v) {
    if (v.path_O instanceof Nil) {
      return v.path_I;
    }
    ;
    if (v.path_O instanceof Cons) {
      return append2(new NonEmpty(v.path_O.value0, v.path_O.value1))(v.path_I);
    }
    ;
    throw new Error("Failed pattern match at Data.Expr (line 425, column 41 - line 427, column 42): " + [v.path_O.constructor.name]);
  };
  var getSteps = function(v) {
    return mapWithIndex3(function(i) {
      return function(v1) {
        return i;
      };
    })(v.kids);
  };
  var getStep = function(v) {
    return length(v.kids_L);
  };
  var getIndexesAroundStep = function(v) {
    return {
      "_L": v,
      "_R": v + 1 | 0
    };
  };
  var getExtremeIndexes = function(v) {
    return {
      "_L": 0,
      "_R": length(v.kids)
    };
  };
  var getEndPoints_SpanH = function(v) {
    return {
      "_L": {
        path: v.path,
        j: v.j_L
      },
      "_R": {
        path: v.path,
        j: v.j_R
      }
    };
  };
  var fromNePath = /* @__PURE__ */ fromFoldable(/* @__PURE__ */ foldableNonEmpty(foldableList));
  var getEndPoints_ZipperH = function(v) {
    return {
      "_OL": {
        path: v.path_O,
        j: v.j_OL
      },
      "_IL": {
        path: fromNePath(getTotalInnerPath_ZipperH(v)),
        j: v.j_IL
      },
      "_IR": {
        path: fromNePath(getTotalInnerPath_ZipperH(v)),
        j: v.j_IR
      },
      "_OR": {
        path: v.path_O,
        j: v.j_OR
      }
    };
  };
  var atStep = function(dictShow) {
    var show8 = show(showExpr(dictShow));
    return function(i) {
      return function(v) {
        var v1 = fromMaybe$prime(impossible("atStep " + (show22(i) + (" " + show8(v)))))(extractAt_Array(unwrap2(i))(v.kids));
        return {
          outside: {
            l: v.l,
            kids_L: v1.before,
            kids_R: v1.after
          },
          at: v1.at
        };
      };
    };
  };
  var atSteps = function(dictShow) {
    var atStep1 = atStep(dictShow);
    return function(e) {
      return map5(function(i) {
        return atStep1(i)(e);
      })(getSteps(e));
    };
  };
  var atSubExpr = function(dictShow) {
    var atStep1 = atStep(dictShow);
    var go2 = function($copy_ts) {
      return function($copy_path) {
        return function($copy_e) {
          var $tco_var_ts = $copy_ts;
          var $tco_var_path = $copy_path;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(ts, path, e) {
            if (path instanceof Cons) {
              var v = atStep1(path.value0)(e);
              $tco_var_ts = new Cons(v.outside, ts);
              $tco_var_path = path.value1;
              $copy_e = v.at;
              return;
            }
            ;
            if (path instanceof Nil) {
              $tco_done = true;
              return {
                outside: reverse2(ts),
                at: e
              };
            }
            ;
            throw new Error("Failed pattern match at Data.Expr (line 169, column 18 - line 173, column 47): " + [path.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_ts, $tco_var_path, $copy_e);
          }
          ;
          return $tco_result;
        };
      };
    };
    return go2(Nil.value);
  };

  // output/Editor.Example.Editor1/index.js
  var mapFlipped2 = /* @__PURE__ */ mapFlipped(functorArray);
  var Root = /* @__PURE__ */ function() {
    function Root2() {
    }
    ;
    Root2.value = new Root2();
    return Root2;
  }();
  var $$String = /* @__PURE__ */ function() {
    function $$String2(value0) {
      this.value0 = value0;
    }
    ;
    $$String2.create = function(value0) {
      return new $$String2(value0);
    };
    return $$String2;
  }();
  var L = function(x) {
    return x;
  };
  var showDat = {
    show: function(v) {
      if (v instanceof Root) {
        return "#Root";
      }
      ;
      if (v instanceof $$String) {
        return v.value0;
      }
      ;
      throw new Error("Failed pattern match at Editor.Example.Editor1 (line 31, column 1 - line 33, column 22): " + [v.constructor.name]);
    }
  };
  var show3 = /* @__PURE__ */ show(showDat);
  var showL = {
    show: function(v) {
      return show3(v.dat);
    }
  };
  var mkL = function(dat) {
    return function(meta) {
      return {
        dat,
        meta
      };
    };
  };
  var example_expr = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2 === 0) {
          return mkExpr(mkL(new $$String("L"))(v))([]);
        }
        ;
        return mkExpr(mkL(new $$String("B"))(v))(mapFlipped2(range2(0)(v1 - 1 | 0))(function(v3) {
          return example_expr(v)(v1)(v2 - 1 | 0);
        }));
      };
    };
  };

  // output/Effect.Console/foreign.js
  var log = function(s) {
    return function() {
      console.log(s);
    };
  };

  // output/Effect.Console/index.js
  var logShow = function(dictShow) {
    var show6 = show(dictShow);
    return function(a) {
      return log(show6(a));
    };
  };

  // output/Effect.Class.Console/index.js
  var logShow2 = function(dictMonadEffect) {
    var liftEffect2 = liftEffect(dictMonadEffect);
    return function(dictShow) {
      var $65 = logShow(dictShow);
      return function($66) {
        return liftEffect2($65($66));
      };
    };
  };
  var log2 = function(dictMonadEffect) {
    var $67 = liftEffect(dictMonadEffect);
    return function($68) {
      return $67(log($68));
    };
  };

  // output/Ui.Common/foreign.js
  var htmlDoc = document;
  var htmlBody = document.body;

  // output/Web.DOM.DOMTokenList/foreign.js
  function add2(list) {
    return function(token) {
      return function() {
        return list.add(token);
      };
    };
  }
  function remove(list) {
    return function(token) {
      return function() {
        return list.remove(token);
      };
    };
  }

  // output/Web.DOM.Document/foreign.js
  var getEffProp = function(name15) {
    return function(doc2) {
      return function() {
        return doc2[name15];
      };
    };
  };
  var url = getEffProp("URL");
  var documentURI = getEffProp("documentURI");
  var origin = getEffProp("origin");
  var compatMode = getEffProp("compatMode");
  var characterSet = getEffProp("characterSet");
  var contentType = getEffProp("contentType");
  var _documentElement = getEffProp("documentElement");
  function createElement(localName2) {
    return function(doc2) {
      return function() {
        return doc2.createElement(localName2);
      };
    };
  }

  // output/Web.DOM.Element/foreign.js
  var getProp = function(name15) {
    return function(doctype) {
      return doctype[name15];
    };
  };
  var _namespaceURI = getProp("namespaceURI");
  var _prefix = getProp("prefix");
  var localName = getProp("localName");
  var tagName = getProp("tagName");
  function classList(element) {
    return function() {
      return element.classList;
    };
  }

  // output/Web.DOM.ParentNode/foreign.js
  var getEffProp2 = function(name15) {
    return function(node) {
      return function() {
        return node[name15];
      };
    };
  };
  var children = getEffProp2("children");
  var _firstElementChild = getEffProp2("firstElementChild");
  var _lastElementChild = getEffProp2("lastElementChild");
  var childElementCount = getEffProp2("childElementCount");

  // output/Web.DOM.Element/index.js
  var toNode = unsafeCoerce2;
  var toEventTarget = unsafeCoerce2;

  // output/Web.DOM.Node/foreign.js
  var getEffProp3 = function(name15) {
    return function(node) {
      return function() {
        return node[name15];
      };
    };
  };
  var baseURI = getEffProp3("baseURI");
  var _ownerDocument = getEffProp3("ownerDocument");
  var _parentNode = getEffProp3("parentNode");
  var _parentElement = getEffProp3("parentElement");
  var childNodes = getEffProp3("childNodes");
  var _firstChild = getEffProp3("firstChild");
  var _lastChild = getEffProp3("lastChild");
  var _previousSibling = getEffProp3("previousSibling");
  var _nextSibling = getEffProp3("nextSibling");
  var _nodeValue = getEffProp3("nodeValue");
  var textContent = getEffProp3("textContent");
  function setTextContent(value12) {
    return function(node) {
      return function() {
        node.textContent = value12;
      };
    };
  }
  function appendChild(node) {
    return function(parent2) {
      return function() {
        parent2.appendChild(node);
      };
    };
  }

  // output/Web.HTML.HTMLBodyElement/index.js
  var toElement = unsafeCoerce2;

  // output/Web.HTML.HTMLDocument/index.js
  var toDocument = unsafeCoerce2;

  // output/Ui.Common/index.js
  var removeClass = function(c) {
    return function(elem3) {
      return function __do2() {
        var v = classList(elem3)();
        return remove(v)(c)();
      };
    };
  };
  var doc = /* @__PURE__ */ toDocument(htmlDoc);
  var body = /* @__PURE__ */ toElement(htmlBody);
  var appendChild2 = function(child) {
    return function(elem_parent) {
      return appendChild(toNode(child))(toNode(elem_parent));
    };
  };
  var createElement2 = function(tag) {
    return function(parent2) {
      return function __do2() {
        var elem3 = createElement(tag)(doc)();
        appendChild2(elem3)(parent2)();
        return elem3;
      };
    };
  };
  var addClass = function(c) {
    return function(elem3) {
      return function __do2() {
        var v = classList(elem3)();
        return add2(v)(c)();
      };
    };
  };

  // output/Web.Event.EventTarget/foreign.js
  function eventListener(fn) {
    return function() {
      return function(event) {
        return fn(event)();
      };
    };
  }
  function addEventListenerWithOptions(type) {
    return function(listener) {
      return function(options2) {
        return function(target5) {
          return function() {
            return target5.addEventListener(type, listener, options2);
          };
        };
      };
    };
  }

  // output/Ui.App/index.js
  var pure2 = /* @__PURE__ */ pure(applicativeEffect);
  var unwrap3 = /* @__PURE__ */ unwrap();
  var atSubExpr2 = /* @__PURE__ */ atSubExpr(showL);
  var fromMaybeM2 = /* @__PURE__ */ fromMaybeM(applicativeEffect);
  var map6 = /* @__PURE__ */ map(functorMaybe);
  var sequence2 = /* @__PURE__ */ sequence(traversableArray)(applicativeEffect);
  var log3 = /* @__PURE__ */ log2(monadEffectEffect);
  var show5 = /* @__PURE__ */ show(showPoint);
  var pure12 = /* @__PURE__ */ pure(applicativeMaybe);
  var showExpr2 = /* @__PURE__ */ showExpr(showL);
  var show1 = /* @__PURE__ */ show(showExpr2);
  var show23 = /* @__PURE__ */ show(/* @__PURE__ */ showList(showStep));
  var show32 = /* @__PURE__ */ show(showL);
  var map12 = /* @__PURE__ */ map(functorEffect);
  var traverse2 = /* @__PURE__ */ traverse(traversableArray)(applicativeEffect);
  var atSteps2 = /* @__PURE__ */ atSteps(showL);
  var over2 = /* @__PURE__ */ over()();
  var newState = function __do() {
    var expr = $$new(Nothing.value)();
    var mb_handle = $$new(Nothing.value)();
    return {
      expr,
      mb_handle
    };
  };
  var getExpr = function(state2) {
    return function __do2() {
      var v = read(state2.expr)();
      if (v instanceof Nothing) {
        return $$throw("getExpr: isNothing state.expr!")();
      }
      ;
      if (v instanceof Just) {
        return v.value0;
      }
      ;
      throw new Error("Failed pattern match at Ui.App (line 200, column 43 - line 202, column 25): " + [v.constructor.name]);
    };
  };
  var getPointElement = function(state2) {
    return function(v) {
      return function __do2() {
        var expr = getExpr(state2)();
        var expr$prime = atSubExpr2(v.path)(expr).at;
        return fromMaybeM2($$throw("getPointElement: p.j out-of-bounds"))(map6(fst)(index(unwrap3(unwrap3(expr$prime).l).meta.points)(unwrap3(v.j))))();
      };
    };
  };
  var modifyHandle = function(b) {
    return function(state2) {
      return function(mb_handle) {
        var modifyClass = function() {
          if (b) {
            return addClass;
          }
          ;
          return removeClass;
        }();
        if (mb_handle instanceof Nothing) {
          return pure2(unit);
        }
        ;
        if (mb_handle instanceof Just && mb_handle.value0 instanceof Point_Handle) {
          return function __do2() {
            var elem_point = getPointElement(state2)(mb_handle.value0.value0)();
            return modifyClass("Point_Handle")(elem_point)();
          };
        }
        ;
        if (mb_handle instanceof Just && mb_handle.value0 instanceof SpanH_Handle) {
          var p = getEndPoints_SpanH(mb_handle.value0.value0);
          return function __do2() {
            var elem_point_L = getPointElement(state2)(p["_L"])();
            modifyClass("SpanH_Handle_L")(elem_point_L)();
            var elem_point_R = getPointElement(state2)(p["_R"])();
            return modifyClass("SpanH_Handle_R")(elem_point_R)();
          };
        }
        ;
        if (mb_handle instanceof Just && mb_handle.value0 instanceof ZipperH_Handle) {
          var p = getEndPoints_ZipperH(mb_handle.value0.value0);
          return function __do2() {
            var elem_point_OL = getPointElement(state2)(p["_OL"])();
            modifyClass("ZipperH_Handle_OL")(elem_point_OL)();
            var elem_point_IL = getPointElement(state2)(p["_IL"])();
            modifyClass("ZipperH_Handle_IL")(elem_point_IL)();
            var elem_point_IR = getPointElement(state2)(p["_IR"])();
            modifyClass("ZipperH_Handle_IR")(elem_point_IR)();
            var elem_point_OR = getPointElement(state2)(p["_OR"])();
            return modifyClass("ZipperH_Handle_OR")(elem_point_OR)();
          };
        }
        ;
        throw new Error("Failed pattern match at Ui.App (line 170, column 3 - line 190, column 54): " + [mb_handle.constructor.name]);
      };
    };
  };
  var setHandle = function(state2) {
    return function(mb_handle$prime) {
      return function __do2() {
        var mb_handle = read(state2.mb_handle)();
        modifyHandle(false)(state2)(mb_handle)();
        modifyHandle(true)(state2)(mb_handle$prime)();
        return writeFlipped(state2.mb_handle)(mb_handle$prime)();
      };
    };
  };
  var renderPoint = function(state2) {
    return function(v) {
      return function(elem_parent) {
        return function __do2() {
          var elem_point = createElement2("div")(elem_parent)();
          addClass("Point")(elem_point)();
          var eventListeners = sequence2([/* @__PURE__ */ function() {
            var opts = {
              capture: true,
              once: false,
              passive: true
            };
            return function __do3() {
              var eventListener2 = eventListener(function(_event) {
                return function __do4() {
                  log3("clicked on Point: " + show5(v))();
                  return setHandle(state2)(pure12(new Point_Handle(v)))();
                };
              })();
              addEventListenerWithOptions("click")(eventListener2)(opts)(toEventTarget(elem_point))();
              return {
                eventType: "click",
                eventListener: eventListener2,
                capture: opts.capture
              };
            };
          }()])();
          return new Tuple(elem_point, eventListeners);
        };
      };
    };
  };
  var renderExpr = function(state2) {
    return function(path) {
      return function(v) {
        return function(elem_parent) {
          return function __do2() {
            log3("renderExpr: " + show1(v))();
            var elem_expr = createElement2("div")(elem_parent)();
            addClass("Expr")(elem_expr)();
            (function() {
              if (v.l.dat instanceof Root) {
                return addClass("Root")(elem_expr)();
              }
              ;
              return unit;
            })();
            var eventListeners = sequence2([/* @__PURE__ */ function() {
              var opts = {
                capture: true,
                once: false,
                passive: true
              };
              return function __do3() {
                var eventListener2 = eventListener(function(_event) {
                  return log3("clicked on Expr: " + show23(path));
                })();
                addEventListenerWithOptions("click")(eventListener2)(opts)(toEventTarget(elem_expr))();
                return {
                  eventType: "click",
                  eventListener: eventListener2,
                  capture: opts.capture
                };
              };
            }()])();
            (function __do3() {
              var elem_label = createElement2("div")(elem_expr)();
              return setTextContent(show32(v.l))(toNode(elem_label))();
            })();
            var v1 = map12(unzip)(traverse2(function(v12) {
              var i = getStep(v12.outside);
              var j = getIndexesAroundStep(i)["_L"];
              return function __do3() {
                var v2 = renderPoint(state2)({
                  path,
                  j
                })(elem_expr)();
                var kid$prime = renderExpr(state2)(snoc2(path)(i))(v12.at)(elem_expr)();
                return new Tuple(kid$prime, new Tuple(v2.value0, v2.value1));
              };
            })(atSteps2(v)))();
            var lastPoint = function __do3() {
              var v2 = renderPoint(state2)({
                path,
                j: getExtremeIndexes(v)["_R"]
              })(elem_expr)();
              return new Tuple(v2.value0, v2.value1);
            }();
            var meta_expr = {
              elem: elem_expr,
              eventListeners,
              points: snoc(v1.value1)(lastPoint)
            };
            return {
              l: over2(L)(function(v2) {
                return {
                  dat: v2.dat,
                  meta: meta_expr
                };
              })(v.l),
              kids: v1.value0
            };
          };
        };
      };
    };
  };
  var main = /* @__PURE__ */ function() {
    var expr = mkExpr(mkL(Root.value)({}))([example_expr({})(2)(2)]);
    return function __do2() {
      logShow2(monadEffectEffect)(showExpr2)(expr)();
      var state2 = newState();
      var elem_editor = function __do3() {
        var elem_editor2 = createElement2("div")(body)();
        addClass("Editor")(elem_editor2)();
        return elem_editor2;
      }();
      var expr$prime = renderExpr(state2)(Nil.value)(expr)(elem_editor)();
      writeFlipped(state2.expr)(pure12(expr$prime))();
      return unit;
    };
  }();

  // output/Ui/index.js
  var main3 = /* @__PURE__ */ function() {
    if (true) {
      return main;
    }
    ;
    if (false) {
      return main2;
    }
    ;
    return liftEffect(monadEffectEffect)($$throw("unrecognized main label: " + show(showString)("App")));
  }();

  // <stdin>
  main3();
})();
