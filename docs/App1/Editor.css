:root {
  --Editor--background: var(--body--background);
  --Editor--color: var(--body--color);

  --Handle--width: 1em;
  --Handle--background-color: rgb(106, 0, 255);
  --Handle_Focus--box-shadow:
    0 -0.5em 0 0 var(--Handle--background-color),
    0 0.5em 0 0 var(--Handle--background-color);

  --Handle--border-radius: var(--Handle--width);
  --Handle_Left--border-radius: var(--Handle--border-radius) 0 0 var(--Handle--border-radius);
  --Handle_Right--border-radius: 0 var(--Handle--border-radius) var(--Handle--border-radius) 0;

  --Handle_inside--background: color-mix(in hsl, var(--Handle--background-color), transparent 90%);
}

.Editor {
  /* box-shadow: 0 0 0 1px black inset; */
  scrollbar-width: 1em;

  flex: 1 0 auto;
  overflow: scroll;
  width: calc(100% - 2em);

  padding: 1em;

  font-family: monospace;

  &>.root {
    height: 1em;
  }

  .Expr {
    /* padding: 0.5em;
    box-shadow: 0 0 0 1px black; */

    height: 100%;

    display: flex;
    flex-direction: row;
    align-items: stretch;
    justify-content: flex-start;

    user-select: none;

    &>.label {
      display: block;
      white-space: nowrap;
    }
  }

  .Point {
    /* position: relative; */
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    justify-content: flex-start;
    height: 100%;


    &>.Left,
    &>.Middle,
    &>.Right {
      height: 100%;
      min-width: calc(var(--Handle--width) / 3);

      /* transition:
        background-color 0.2s ease-in,
        box-shadow 0.2s ease-in; */
    }

    .Buffer {
      /* position: absolute;
      top: 2em; */
      margin-top: -0.5em;

      padding: 0.5em;
      width: fit-content;

      display: flex;
      flex-direction: column;
      gap: 0.5em;

      border-radius: 0.5em;
      background: rgba(0, 0, 0, 0.1);
      backdrop-filter: blur(15px);
      -webkit-backdrop-filter: blur(15px);
      box-shadow: 0 0 1em 0 rgba(0, 0, 0, 0.2);
      transition: box-shadow 0.3s ease;
      animation: Buffer-appear 0.2s forwards linear;

      &>.query {
        outline: none;
        border: none;
        border-radius: 1em 1em 1em 0;
        padding: 0.5em;

        width: fit-content;
        min-width: 1ch;
        transition: width 0.3s ease-in-out;

        animation: rainbow-glow 20s infinite linear;

        background: #1a1a1a;
        color: white;

        font-size: 1em;
        font-family: inherit;

        &:focus {
          box-shadow: 0 0 15px hsla(210deg 100% 60% / 0.5), 0 4px 10px rgba(0, 0, 0, 0.2);
        }
      }

      &>.options {
        overflow: visible;

        display: flex;
        flex-direction: column;
        align-items: flex-start;
        justify-content: flex-start;
        gap: 0.5em;

        &>.BufferOption {
          padding: 0.5em;
          border-radius: 0 1em 1em 1em;

          background: var(--Editor--background);
          box-shadow: 0 0 0 0 black inset;

          white-space: nowrap;

          /* transition: all 0.2s linear; */

          &.selected {
            /* background: var(--Handle_inside--background); */
            /* box-shadow:
              0 0 0 0.1em black inset,
              0 0 15px hsla(210deg 100% 60% / 0.5),
              0 0 10px rgba(0, 0, 0, 0.2); */
            box-shadow: 0 0 0 0.1em black inset;
          }

          animation: BufferOption-appear 0.2s linear forwards;
        }
      }
    }


    &.Point_Handle_PointStatus {
      &>.Middle {
        border-radius: 1em;
        background: var(--Handle--background-color);
        box-shadow: var(--Handle_Focus--box-shadow);
      }
    }

    &.SpanH_Handle_Left_PointStatus {
      >.Left {
        background: var(--Handle--background-color);
        border-radius: var(--Handle_Left--border-radius);
      }

      &.LeftFocus_PointStatus>.Left {
        box-shadow: var(--Handle_Focus--box-shadow);
      }

      &>.Middle,
      &>.Right,
      &~* {
        background: var(--Handle_inside--background);
      }
    }

    &.SpanH_Handle_Right_PointStatus {
      >.Right {
        background: var(--Handle--background-color);
        border-radius: var(--Handle_Right--border-radius);
      }

      &.RightFocus_PointStatus>.Right {
        box-shadow: var(--Handle_Focus--box-shadow);
      }

      &~* {
        background: var(--Editor--background);
      }
    }

    &.ZipperH_Handle_OuterLeft_PointStatus {
      >.Left {
        background: var(--Handle--background-color);
        border-radius: var(--Handle_Left--border-radius);
      }

      &.LeftFocus_PointStatus>.Left {
        box-shadow: var(--Handle_Focus--box-shadow);
      }

      &>.Middle,
      &>.Right,
      &~* {
        background: var(--Handle_inside--background);
      }
    }

    &.ZipperH_Handle_InnerLeft_PointStatus {
      &>.Left {
        background: var(--Handle--background-color);
      }

      &.LeftFocus_PointStatus>.Left {
        box-shadow: var(--Handle_Focus--box-shadow);
      }

      &~* {
        background: var(--Editor--background);
      }

      background: var(--Editor--background)
    }

    &.ZipperH_Handle_InnerRight_PointStatus {
      >.Right {
        background: var(--Handle--background-color);
      }

      &.RightFocus_PointStatus>.Right {
        box-shadow: var(--Handle_Focus--box-shadow);
      }

      &~* {
        background: transparent;
      }
    }

    &.ZipperH_Handle_OuterRight_PointStatus {

      &>.Left,
      &>.Middle {
        background: var(--Handle_inside--background);
      }

      &>.Right {
        background: var(--Handle--background-color);
        border-radius: var(--Handle_Right--border-radius);
      }

      &.RightFocus_PointStatus>.Right {
        box-shadow: var(--Handle_Focus--box-shadow);
      }

      background: transparent;

      &~* {
        background: var(--Editor--background);
      }
    }
  }
}

@keyframes BufferOption-appear {
  from {
    opacity: 0;
    transform: translateX(1em);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes BufferOption-selected {
  from {
    transform: translateX(-1em);
  }

  to {
    transform: translateX(0);
  }
}

@keyframes Buffer-appear {
  from {
    /* opacity: 0; */
    /* transform: translateY(-1em); */
  }

  to {
    /* opacity: 1; */
    /* transform: translateY(0); */
  }
}

@keyframes rainbow-glow {
  0% {
    box-shadow: 0 0 5px rgba(0, 255, 255, 0.7), 0 0 8px rgba(0, 255, 255, 0.5) inset, 0 0 10px #00ffff;
  }

  25% {
    box-shadow: 0 0 5px rgba(255, 0, 255, 0.7), 0 0 8px rgba(255, 0, 255, 0.5) inset, 0 0 10px #ff00ff;
  }

  50% {
    box-shadow: 0 0 5px rgba(255, 255, 0, 0.7), 0 0 8px rgba(255, 255, 0, 0.5) inset, 0 0 10px #ffff00;
  }

  75% {
    box-shadow: 0 0 5px rgba(0, 255, 0, 0.7), 0 0 8px rgba(0, 255, 0, 0.5) inset, 0 0 10px #00ff00;
  }

  100% {
    box-shadow: 0 0 5px rgba(0, 255, 255, 0.7), 0 0 8px rgba(0, 255, 255, 0.5) inset, 0 0 10px #00ffff;
  }
}

@keyframes Point-appear {
  0% {
    opacity: 0;
    transform: scaleY(1);
  }

  50% {
    opacity: 0.5;
    transform: scaleY(1.5);
  }

  100% {
    opacity: 1;
    transform: scaleY(1);
  }
}